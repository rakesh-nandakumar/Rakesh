[
  {
    "image": "/projects/dcula.png",
    "category": "Government",
    "title": "Song Registration Portal - Department of Cultural Affairs",
    "shortDescription": "A government song registration portal and CMS linking Joomla! with a Laravel + React portal, built for Procons Infectic.",
    "longDescription": "Delivered for Procons Infectic as a strategic government contract with the Department of Cultural Affairs, this project is a comprehensive, production-hardened song registration and archival platform that modernized legacy content workflows and introduced a resilient public-facing portal. The solution blends a performant Laravel + React portal for public submissions with a robust Joomla! CMS acting as the authoritative content source for administrative workflows, editorial publishing, and rich content presentation. I designed and implemented secure RESTful synchronization bridges and webhooks that ensure near-real-time consistency between the portal and Joomla!, allowing editorial teams to author content in the CMS while the portal consumes and renders that content with precise caching and invalidation rules. The system supports multi-step user registration, two-factor-capable authentication hooks, role-based admin approvals, staged moderation queues, and a detailed audit trail for every submission to meet government compliance requirements. Search and discovery were upgraded with indexed metadata, multi-faceted filtering, and relevance-weighted results. Accessibility, cross-browser compatibility, and responsive UI were implemented with Bootstrap and progressive enhancement techniques so the public portal remains usable on low-bandwidth devices. For production we automated CI/CD deployments into AWS with immutable releases, database migration scripts and backups, monitoring and alerting, and hardened input validation and sanitization to reduce attack surface. The project delivered a measurable improvement in submission processing times, administrative throughput, and public discoverability while meeting strict security and governance standards.",
    "keyFeatures": [
      {
        "feature": "Bi-directional CMS sync",
        "description": "Secure REST API and webhook-based synchronization between Joomla! and the Laravel portal to keep content and metadata consistent in near-real-time."
      },
      {
        "feature": "Moderation & audit trails",
        "description": "Role-based approval workflows, staged moderation queues, and immutable audit logs for compliance and traceability."
      },
      {
        "feature": "Advanced search & filtering",
        "description": "Indexed metadata search with multi-faceted filters and relevance weighting to surface the most appropriate song entries."
      },
      {
        "feature": "Production-grade deployment",
        "description": "CI/CD pipelines, automated backups, and monitoring on AWS with secure network and DB configurations."
      },
      {
        "feature": "Government-grade security",
        "description": "Enterprise-level security measures and compliance standards for government data protection."
      },
      {
        "feature": "Real-time synchronization",
        "description": "Near-real-time data sync between portal and CMS ensuring consistency across platforms."
      },
      {
        "feature": "Accessible UI design",
        "description": "Responsive, accessible UI built for wide public reach across devices and connection speeds."
      },
      {
        "feature": "Comprehensive audit logging",
        "description": "Detailed audit logging and moderation workflows for transparency and accountability."
      }
    ],
    "technologies": [
      "Laravel",
      "React",
      "Joomla!",
      "AWS",
      "MySQL",
      "Bootstrap",
      "REST API",
      "Docker",
      "AWS"
    ],
    "featured": true,
    "status": "completed",
    "liveLink": "https://www.culturaldept.gov.lk/index.php?lang=en#thirdPage",
    "type": "work"
  },
  {
    "image": "/projects/nilet.png",
    "category": "Government",
    "title": "NiLET (National Institute of Language Education and Training)",
    "shortDescription": "Integrated WordPress CMS with a custom Laravel + Bootstrap + Vue.js student portal for managing language course registrations and administration.",
    "longDescription": "Delivered as a complete digital transformation for the National Institute of Language Education and Training, NiLET is a cohesive platform that unifies a marketing-driven WordPress front-end with a fully custom Laravel student portal and a responsive Vue.js administration UX. The system addresses the full lifecycle of language education operations: course marketing and content are managed in WordPress while student enrollments, fee processing, attendance, batch management, and certificate issuance are processed in the Laravel portal. I implemented advanced features such as automated WhatsApp group creation and secure link distribution, slip upload workflows for payment adjustments, and an auditable complaints and escalations module for student support. Administrative workflows include coordinator dashboards with role-based permissions, CSV-driven results publishing with transactional safeguards (publish/unpublish/hold), batch capacity enforcement, and reporting exports for finance and compliance. Integration patterns used secure REST APIs and idempotent syncs to avoid duplicate records across systems, and background job processing handled large batches for CSV imports, notifications, and media transcoding. The solution was productionized on AWS with horizontal scaling patterns, backups, and monitoring. The result was a reliable, user-friendly platform that reduced manual administrative effort, minimized errors in enrollment and payments, and improved student satisfaction metrics.",
    "keyFeatures": [
      {
        "feature": "WordPress + Laravel integration",
        "description": "Seamless separation of marketing content (WordPress) and transactional student services (Laravel) with secure synchronization."
      },
      {
        "feature": "Batch & enrollment management",
        "description": "Batch capacity rules, automated seat allocation, and coordinator-led overrides with auditability."
      },
      {
        "feature": "Payment slip workflow",
        "description": "Slip uploads for payment changes with penalty handling and finance reconciliation exports."
      },
      {
        "feature": "WhatsApp automation",
        "description": "Automated group creation and secure link management for course cohorts to improve student communication."
      },
      {
        "feature": "Unified platform architecture",
        "description": "Integrated CMS and transactional portal providing seamless user experience across systems."
      },
      {
        "feature": "Smart communication system",
        "description": "Automated communication and media handling to streamline student and staff interactions."
      },
      {
        "feature": "Advanced access control",
        "description": "Coordinator dashboards and role-based controls for secure multi-level administration."
      },
      {
        "feature": "Cloud infrastructure",
        "description": "Scalable AWS deployment with auto-scaling and high availability configurations."
      }
    ],
    "technologies": [
      "Laravel",
      "Bootstrap",
      "Vue.js",
      "WordPress",
      "AWS",
      "MySQL",
      "REST API",
      "Docker"
    ],
    "featured": true,
    "status": "completed",
    "liveLink": "https://nilet.gov.lk/index.php/en/",

    "type": "work"
  },
  {
    "image": "/projects/academy.png",
    "category": "Education",
    "title": "Procons Academy",
    "shortDescription": "Enterprise-grade academy platform integrating ASP.NET Core, React + Redux frontend, Tailwind CSS, WordPress CMS, Laravel admin, and Moodle for student LMS.",
    "longDescription": "Procons Academy is an enterprise-grade digital learning ecosystem engineered to connect marketing, course administration, and a standards-compliant LMS. The public website uses WordPress for SEO-driven content and admissions funnels while the core application pairs an ASP.NET Core microservice architecture with a React + Redux single-page application for interactive student and staff experiences. I implemented a Laravel-based administrative orchestration layer where lecturers and coordinators author and manage course structures; those changes are synchronized programmatically to Moodle using secure web services and custom connectors that preserve course structure, resources, and enrollment rules. The platform supports flexible payment flows (online gateways and offline reconciliation), automated certificate generation with templating, Zoom integration for scheduling and ingesting meeting metadata, and a notification engine for transactional emails and alerts. A robust audit and permissions model enforces separation of duties across coordinators, lecturers and admins. Background workers handle heavy tasks—CSV results ingestion, certificate batch printing, media transcoding—and were designed to be idempotent and monitorable. The solution was containerized and deployed to AWS with auto-scaling groups, load balancers, CI/CD pipelines, and a monitoring stack to ensure uptime and operational observability. The delivered platform significantly reduced time-to-publish for new courses, improved traceability for student records, and provided a unified experience across marketing, admin, and learning environments.",
    "keyFeatures": [
      {
        "feature": "LMS synchronization",
        "description": "Programmatic synchronization of course data from admin panels into Moodle with safe, idempotent APIs to avoid duplicates and preserve mappings."
      },
      {
        "feature": "Flexible payments & reconciliation",
        "description": "Support for multiple payment flows with automated reconciliation and finance export reports."
      },
      {
        "feature": "Zoom & notification integration",
        "description": "Automatic capture of Zoom meeting links, scheduling metadata, and transactional notification workflows."
      },
      {
        "feature": "Containerized, monitored deployment",
        "description": "Dockerized services deployed with CI/CD to AWS and observability tooling for logs, metrics, and alerts."
      },
      {
        "feature": "Enterprise architecture",
        "description": "Enterprise-grade architecture and scaling capabilities for high-traffic educational platforms."
      },
      {
        "feature": "Intelligent course management",
        "description": "Automated course sync with Moodle ensuring seamless content delivery and student enrollment."
      },
      {
        "feature": "Security & compliance",
        "description": "Role-based permissions and auditing systems for educational data protection and compliance."
      },
      {
        "feature": "Asynchronous processing",
        "description": "Background job processing for heavy workloads without impacting user experience."
      }
    ],
    "technologies": [
      "ASP.NET Core",
      "React",
      "Redux",
      "Tailwind CSS",
      "WordPress",
      "Laravel",
      "Moodle",
      "Zoom API",
      "AWS (ELB, Auto Scaling, RDS)",
      "Docker",
      "MySQL",
      "Redis",
      "Background Jobs"
    ],
    "featured": true,
    "status": "completed",
    "liveLink": "https://proconsacademy.com/",
    "type": "work"
  },
  {
    "image": "/projects/erdly.png",
    "category": "Development Tools",
    "title": "ERDly",
    "shortDescription": "Lightweight visual ERD builder with AI assistant to draft schemas and export SQL.",
    "longDescription": "ERDly is a focused, developer-friendly visual ERD builder that accelerates schema design by combining a drag-and-drop canvas with an intelligent assistant. Built with React, TypeScript and React Flow, ERDly lets users create entities, define columns (primary keys, unique constraints, nullable flags), and model relationships (1:1, 1:N, N:M) with automatic generation of normalized junction tables for many-to-many patterns. The interface emphasizes rapid iteration: schema diffs are previewable, SQL exports are customizable for different RDBMS dialects, and import/export of JSON schema bundles enables collaboration. The standout capability is the AI-powered drafting assistant — it translates plain-language business requirements into a first-pass schema, suggests indexing strategies, and annotates columns with types and validation rules. The tool includes safety checks for common anti-patterns, previewable migration scripts, and an ergonomically designed UI so small teams can go from idea to deployable SQL faster. ERDly is optimized for local performance and can produce production-ready SQL that integrates with existing CI workflows.",
    "keyFeatures": [
      {
        "feature": "Drag-and-drop schema canvas",
        "description": "Interactive canvas for visually composing entities, relationships and constraints with keyboard shortcuts and multi-select operations."
      },
      {
        "feature": "AI schema drafting",
        "description": "Generative assistant that converts natural-language requirements into a scaffolded schema with recommended types and indices."
      },
      {
        "feature": "Multi-dialect SQL export",
        "description": "Export production-ready SQL tuned for popular RDBMS dialects and preview migration scripts before applying."
      },
      {
        "feature": "Collaboration-ready bundles",
        "description": "Import/export JSON schema bundles and shareable links for team review and versioning."
      },
      {
        "feature": "Intelligent AI assistance",
        "description": "AI-assisted schema drafting that understands business requirements and generates optimal database designs."
      },
      {
        "feature": "Enterprise SQL generation",
        "description": "Production-ready SQL exports compatible with major database systems and migration tools."
      },
      {
        "feature": "Built-in validation",
        "description": "Visual editor with anti-pattern checks to prevent common database design mistakes."
      },
      {
        "feature": "Team collaboration tools",
        "description": "Quick import/export for collaboration with version control and shareable schema links."
      }
    ],
    "technologies": [
      "React",
      "TypeScript",
      "Vite",
      "shadcn-ui",
      "React Flow",
      "Tailwind CSS",
      "Zustand",
      "file-saver",
      "Gemini AI"
    ],
    "liveLink": "https://erdly.rakeshn.com",
    "featured": true,
    "status": "completed",
    "type": "personal"
  },
  {
    "image": "/projects/apiit.png",
    "category": "Development",
    "title": "APIIT University Blog",
    "shortDescription": "A comprehensive student blog platform built for APIIT University to foster engagement and collaboration",
    "longDescription": "This university blog platform was architected to be a modern, extensible engagement hub for students, staff, and alumni. It delivers personalized content feeds based on student programs and affiliations, supports multiple admin roles with delegated permissions, and includes interactive blog capabilities—rich-text posts, media uploads, commenting with moderation, and scheduled publishing. The system integrates an events calendar with real-time notification hooks, an appointment booking flow for faculty office hours, and an alumni networking hub with filtered searches and opt-in privacy settings. A security-first approach used middleware, fine-grained gates, and policy-driven access control, backed by email verification and account recovery flows. SEO enhancements and semantic markup were included to increase discoverability. The platform also supplies analytics dashboards for content performance and moderator tools for community health. Built to scale, it shipped with deployment scripts and operational runbooks so university IT could take ownership confidently.",
    "keyFeatures": [
      {
        "feature": "Personalized content feeds",
        "description": "Dynamic feeds tailored to student affiliations and interests to increase engagement."
      },
      {
        "feature": "Multi-role admin panels",
        "description": "Fine-grained role and permission management for editors, moderators, and admins."
      },
      {
        "feature": "Events & bookings",
        "description": "Integrated calendar with notifications and appointment booking for faculty and events."
      },
      {
        "feature": "SEO & analytics",
        "description": "Semantic markup, sitemaps, and analytics dashboards for content performance tracking."
      },
      {
        "feature": "Community management",
        "description": "Rich community and moderation tools for fostering student engagement and interaction."
      },
      {
        "feature": "Smart content discovery",
        "description": "Personalized and discoverable content system optimized for student interests and academic programs."
      },
      {
        "feature": "Integrated networking",
        "description": "Events, booking and alumni networking features to build lasting academic connections."
      },
      {
        "feature": "Enterprise handover",
        "description": "Operational runbooks for IT handover ensuring smooth transition and maintenance."
      }
    ],
    "technologies": [
      "Laravel",
      "LiveWire",
      "FilamentPHP",
      "Tailwind CSS",
      "AlpineJS",
      "AWS",
      "Docker",
      "SEO"
    ],
    "githubLink": "https://github.com/example/apiit-university-blog",
    "featured": true,
    "status": "completed",
    "type": "work"
  },
  {
    "image": "/projects/csc.png",
    "category": "Development",
    "title": "Ceylon Sports Club Canada",
    "shortDescription": "Enterprise-level web solution for a not-for-profit social club connecting Sri Lankan cricket enthusiasts in Canada",
    "longDescription": "Ceylon Sports Club Canada is a purpose-built platform for community-driven sports organizations, designed to centralize membership management, team organization, event booking, and club communications. Key subsystems include a membership lifecycle manager (registrations, renewals, tiered benefits), sports & team roster management, fixtures and event scheduling with integrated calendar and ticketing flows, and a document repository with versioning for club governance papers. Operational concerns were handled with background job queues for email blasts, payment reconciliation and form processing, while security and privacy controls protect member data through policy-enforced access. The platform offers a public-facing blog and newsfeed for announcements, supporter registration and volunteer coordination features. It was deployed with SEO optimizations and analytics to grow the club's reach among the Sri Lankan community in Canada. The result was a single-pane administrative view that reduced manual overhead and improved member engagement.",
    "keyFeatures": [
      {
        "feature": "Membership lifecycle",
        "description": "Full registration, renewal, tiered memberships and automated communications for members."
      },
      {
        "feature": "Team & fixtures management",
        "description": "Create teams, schedule fixtures, manage results and publish calendars to the public site."
      },
      {
        "feature": "Document & governance hub",
        "description": "Versioned document storage for policies, minutes and official club records with controlled access."
      },
      {
        "feature": "Background processing",
        "description": "Queued jobs for notifications, payment reconciliation, and heavy imports to keep the UI responsive."
      },
      {
        "feature": "Unified management system",
        "description": "Centralized membership and team management in a single integrated platform."
      },
      {
        "feature": "Event scheduling",
        "description": "Calendar & ticketing integration for seamless event management and attendance tracking."
      },
      {
        "feature": "Secure document storage",
        "description": "Versioned document repository with access controls for club governance and compliance."
      },
      {
        "feature": "Performance optimization",
        "description": "Queued processing for scalability ensuring responsive user experience under load."
      }
    ],
    "technologies": ["Next.js", "React", "Bootstrap", "MongoDB", "AWS", "SEO"],
    "githubLink": "https://github.com/example/ceylon-sports-club",
    "featured": true,
    "status": "completed",
    "type": "work"
  },
  {
    "image": "/projects/pm.png",
    "category": "Development",
    "title": "Next-Gen Project Mgmt Tool",
    "shortDescription": "Advanced project management platform with Gemini AI integration for intelligent task automation and insights",
    "longDescription": "The Next-Gen Project Management Tool was conceived to bring AI-driven assistance into day-to-day project operations. The platform pairs a scalable ASP.NET backend with a reactive React + Redux frontend to support real-time collaboration, live updates, and customizable dashboards. Core capabilities include AI-powered workflow recommendations (task templates, dependency predictions, and priority scoring), automatic routine task automation (rule-based triggers and scheduled jobs), resource allocation optimization based on skills and availability, and predictive analytics that estimate timeline risk using historical project telemetry. The integration with Gemini provided contextual suggestions for task descriptions, acceptance criteria and sprint planning. Security, logging and an extensible plugin model were included so the product could be adapted to enterprise processes. The product reduces planning overhead, surfaces risks earlier, and helps teams focus on higher-value work through automation and recommendations.",
    "keyFeatures": [
      {
        "feature": "AI workflow recommendations",
        "description": "Gemini-powered templates and suggestions for task breakdowns, priorities and dependencies."
      },
      {
        "feature": "Predictive timeline analytics",
        "description": "Historical-informed predictions to flag at-risk milestones and capacity constraints."
      },
      {
        "feature": "Resource optimization",
        "description": "Skill-aware allocation engine that proposes optimal assignments and alternative staffing plans."
      },
      {
        "feature": "Extensible plugin model",
        "description": "Integrations and plugin hooks for custom automations and enterprise systems."
      },
      {
        "feature": "Intelligent planning",
        "description": "AI-first project planning that learns from historical data to improve accuracy."
      },
      {
        "feature": "Live collaboration",
        "description": "Real-time collaboration and dashboards for team visibility and coordination."
      },
      {
        "feature": "Risk management",
        "description": "Predictive risk analysis to identify and mitigate project risks before they impact delivery."
      },
      {
        "feature": "Enterprise connectivity",
        "description": "Enterprise integration points for seamless connection with existing business tools and workflows."
      }
    ],
    "technologies": ["ASP.NET", "React", "Redux", "Gemini AI", "SQL Server"],
    "githubLink": "https://github.com/example/next-gen-pm",
    "featured": true,
    "status": "completed",
    "type": "feelance"
  },
  {
    "image": "/projects/justlistenit.png",
    "category": "Development",
    "title": "JustListenIt Chrome Extension",
    "shortDescription": "A Chrome extension that reads selected text on any web page out loud for improved accessibility and productivity",
    "longDescription": "JustListenIt is a compact accessibility-first Chrome extension that transforms selected page text into spoken audio using the browser's Web Speech API. The extension includes intuitive selection triggers, keyboard shortcuts, and a small persistent control UI so users can manage playback, choose voices and adjust speed without leaving the page. Language detection heuristics and fallback strategies ensure the best available voice is selected for multilingual content. The codebase is lightweight, privacy-conscious (no text is sent to external services), and uses the Chrome Extensions manifest and APIs for secure permissions and storage. The extension includes options for customizing hotkeys, voice presets, and saving preferred settings per domain. Built for productivity and accessibility, it helps users consume content while multitasking, supports low-vision users, and can be integrated into assistive workflows.",
    "keyFeatures": [
      {
        "feature": "On-page text-to-speech",
        "description": "Convert selected text to speech instantly with keyboard shortcuts and in-page controls."
      },
      {
        "feature": "Language-aware voice selection",
        "description": "Automatic detection and adaptive voice fallback for multilingual web content."
      },
      {
        "feature": "Privacy-first design",
        "description": "All processing uses local Web Speech API—no text is transmitted externally by default."
      },
      {
        "feature": "Customizable presets",
        "description": "User-configurable voices, speed, and hotkeys with per-domain preferences."
      },
      {
        "feature": "Minimal footprint",
        "description": "Lightweight, privacy-first TTS solution that doesn't slow down browser performance."
      },
      {
        "feature": "Quick access controls",
        "description": "Keyboard shortcuts and quick controls for efficient text-to-speech operation."
      },
      {
        "feature": "Global language support",
        "description": "Multilingual detection and voice synthesis for international content consumption."
      },
      {
        "feature": "Universal accessibility",
        "description": "Ideal for accessibility and productivity needs across diverse user groups."
      }
    ],
    "technologies": [
      "JavaScript",
      "Chrome Extensions API",
      "Web Speech API",
      "HTML",
      "CSS"
    ],
    "featured": false,
    "status": "completed",
    "type": "personal"
  },
  {
    "image": "/projects/sql-script-shaper.png",
    "category": "Development Tools",
    "title": "SQL Script Shaper",
    "shortDescription": "A modern web application that converts CSV and Excel files into ready-to-use SQL INSERT statements with customizable options",
    "longDescription": "SQL Script Shaper is a focused developer utility that converts CSV and Excel spreadsheets into production-ready SQL scripts with a rich, interactive preview experience. Users can drag-and-drop files, inspect parsed rows, correct values inline, and configure SQL generation options such as target dialect, quoting preferences, batch sizes, and whether to include DROP/CREATE statements. The engine includes intelligent data type inference with heuristics for dates, numerics, booleans and nullable fields, and provides warnings for suspicious rows. Real-time SQL previews update as users edit data, and export bundles include both SQL and a report of inferred column types for reproducibility. The UI is intentionally minimalist and fast—built with React, TypeScript and shadcn components—and includes helpful UX touches like copy-to-clipboard, download-as-file, and persistent presets. Error handling covers malformed CSVs, large file chunking, and Excel workbook sheet selection so the tool is robust for real-world datasets.",
    "keyFeatures": [
      {
        "feature": "CSV/XLSX parsing and preview",
        "description": "Reliable parsing with sheet selection, chunked processing for large files, and inline data correction."
      },
      {
        "feature": "Dialect-aware SQL generation",
        "description": "Customize SQL output for different RDBMS dialects and choose quoting/batch behaviors."
      },
      {
        "feature": "Type inference & reports",
        "description": "Automatic column type detection with an exportable report to aid DB migrations."
      },
      {
        "feature": "Live editing and immediate export",
        "description": "Edit cell values directly in the preview and see SQL update instantly, then download or copy script."
      },
      {
        "feature": "Instant conversion",
        "description": "Quick conversion from spreadsheets to SQL with zero configuration required."
      },
      {
        "feature": "Smart data analysis",
        "description": "Intelligent type inference and reporting for accurate database schema creation."
      },
      {
        "feature": "Enterprise file handling",
        "description": "Supports large files with chunked parsing to handle enterprise-scale datasets."
      },
      {
        "feature": "Developer-focused UX",
        "description": "Minimal, productivity-focused UI designed for developer efficiency."
      }
    ],
    "technologies": [
      "React",
      "TypeScript",
      "Vite",
      "ShadCN UI",
      "Tailwind CSS",
      "XLSX",
      "React Query",
      "Lucide Icons"
    ],
    "liveLink": "https://sql2csv.rakeshn.com/",
    "featured": true,
    "status": "completed",
    "type": "personal"
  },
  {
    "image": "/projects/apilite.png",
    "category": "Development Tools",
    "title": "APILite",
    "shortDescription": "A sleek and powerful Postman-lite API request builder with modern UI and enhanced request/response workflows.",
    "longDescription": "APILite is a compact, developer-focused HTTP client designed for fast iteration and low friction when developing and debugging APIs. It provides a clean request builder with method selectors, URL templates, header and query parameter editors, support for raw and form-encoded bodies, and pre-request scripts/hooks. The response viewer includes syntax-highlighted payloads, latency timing, and header inspection. Users can save requests into collections, replay them with variable substitution, and browse a history of executed calls. UX decisions prioritize speed: keyboard-first navigation, lightweight persistence in local storage, and optional cloud sync for saved collections. APILite also includes exportable HAR files and quick toggles for common auth schemes. The product aims to be a fast, usable alternative for developers who want a minimal, focused tool without compromising on the critical features needed for debugging APIs.",
    "keyFeatures": [
      {
        "feature": "Lightweight request builder",
        "description": "Fast URI and header editing, body mode toggles, and support for common auth schemes."
      },
      {
        "feature": "Response inspection",
        "description": "Syntax-highlighted responses, timing, and header breakdown for quick debugging."
      },
      {
        "feature": "Collections & history",
        "description": "Save, organize and replay requests with variable templating and HAR export."
      },
      {
        "feature": "Production-friendly UX",
        "description": "Keyboard-first navigation, dark mode, and local persistence with optional sync."
      },
      {
        "feature": "Rapid testing workflows",
        "description": "Fast, minimal API testing workflows designed for developer speed and efficiency."
      },
      {
        "feature": "Request management",
        "description": "Collections and replayability features for organizing and reusing API requests."
      },
      {
        "feature": "Debug integration",
        "description": "Exportable HAR for debugging and integration with other development tools."
      },
      {
        "feature": "Developer efficiency",
        "description": "Keyboard-first developer UX eliminating mouse dependency for faster workflows."
      }
    ],
    "technologies": [
      "React",
      "TypeScript",
      "Vite",
      "ShadCN UI",
      "Tailwind CSS",
      "React Query",
      "Lucide Icons",
      "Prism.js"
    ],
    "liveLink": "https://apilite.rakeshn.com/",
    "featured": true,
    "status": "completed",
    "type": "personal"
  },
  {
    "image": "/projects/ai-resume-matcher.png",
    "category": "AI Tools",
    "title": "AI Resume Matcher",
    "shortDescription": "A smart resume analysis tool that ranks CVs based on job descriptions using Gemini AI with built-in ZIP parsing and real-time scoring.",
    "longDescription": "AI Resume Matcher is a front-end-first assessment tool that streamlines initial candidate triage by combining robust file parsing with generative AI-driven evaluation. Users upload a ZIP of resumes in PDF/DOCX/TXT formats, provide a job description, and the tool performs extraction, parsing and normalization of resume content (text extraction, basic entity detection). A generative scoring engine then compares candidate attributes to the JD and emits a match score with structured reasoning and highlights for strengths and gaps. The app includes safeguards around file validation, rate-limited usage for free tiers, and optional Supabase authentication for usage tracking. The UI focuses on clarity—side-by-side comparison of candidate scores, key skill matches, and exportable shortlists. The product lowers the time-to-shortlist substantially, surfaces objective reasons for matches, and can be integrated into downstream ATS workflows by exporting CSV shortlists and annotated candidate reports.",
    "keyFeatures": [
      {
        "feature": "Bulk resume parsing",
        "description": "ZIP upload support with robust extraction for PDF, DOCX and plain text files, plus basic entity recognition."
      },
      {
        "feature": "AI-driven scoring",
        "description": "Generative comparison of candidate profiles against job descriptions with explainable match reasoning."
      },
      {
        "feature": "Exportable shortlists",
        "description": "Download CSV shortlists and annotated candidate reports for ATS imports and hiring workflows."
      },
      {
        "feature": "Privacy and rate controls",
        "description": "Client-side processing with configurable usage limits and optional authenticated sessions."
      },
      {
        "feature": "Rapid candidate screening",
        "description": "Fast bulk triage of resumes reducing time-to-shortlist dramatically."
      },
      {
        "feature": "Transparent AI evaluation",
        "description": "Explainable AI match scores with clear reasoning for hiring decisions."
      },
      {
        "feature": "ATS integration ready",
        "description": "Exports for ATS and downstream review compatible with major hiring platforms."
      },
      {
        "feature": "Privacy-focused architecture",
        "description": "Front-end-first, privacy-aware design keeping candidate data secure and local."
      }
    ],
    "technologies": [
      "React",
      "TypeScript",
      "Vite",
      "ShadCN UI",
      "Tailwind CSS",
      "JSZip",
      "pdfjs-dist",
      "@google/generative-ai",
      "Supabase Auth"
    ],
    "liveLink": "https://ai-resume-matcher.rakeshn.com/",
    "featured": true,
    "status": "ongoing",
    "progress": 90,
    "type": "personal"
  }
]
